{"version":3,"file":"keys.js","sourceRoot":"","sources":["../../../src/Lazy/keys.ts"],"names":[],"mappings":";AAAA;;;;;;;;;GASG;;;AAEH,SAAU,IAAI,CAAgC,GAAM;;;;;;2BAClC,GAAG;;;;;;;qBACb,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAA5C,wBAA4C;gBAC9C,qBAAM,CAAC,EAAA;;gBAAP,SAAO,CAAC;;;;;;;;CAGb;AAED,kBAAe,IAAI,CAAC","sourcesContent":["/**\n *\n * Returns an iterator of the own enumerable property names of object.\n *\n * @example\n * ```ts\n * [...keys({ a: 1, b: \"2\", c: true })]\n * // [\"a\", \"b\", \"c\"]\n * ```\n */\n\nfunction* keys<T extends Record<string, any>>(obj: T) {\n  for (const k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n      yield k;\n    }\n  }\n}\n\nexport default keys;\n"]}