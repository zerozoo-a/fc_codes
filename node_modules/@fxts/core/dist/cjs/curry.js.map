{"version":3,"file":"curry.js","sourceRoot":"","sources":["../../src/curry.ts"],"names":[],"mappings":";;;AAEA;;;;;;;;;;;;GAYG;AAEH,SAAS,KAAK,CAAoC,CAAI;IACpD,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;IAEvB,OAAO,CAAC,SAAS,QAAQ;QAAC,cAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,yBAAkB;;QAC1C,IAAM,MAAM,4CAAO,IAAI,SAAC,CAAC;QAEzB,OAAO;YAAU,mBAAuB;iBAAvB,UAAuB,EAAvB,qBAAuB,EAAvB,IAAuB;gBAAvB,8BAAuB;;YACtC,IAAM,KAAK,kEAAO,MAAM,0BAAK,SAAS,SAAC,CAAC;YACxC,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAElD,OAAO,IAAI,wDAAI,KAAK,WAAE;QACxB,CAAC,CAAC;IACJ,CAAC,CAAC,EAAS,CAAC;AACd,CAAC;AAED,kBAAe,KAAK,CAAC","sourcesContent":["import Curry from \"./types/Curry\";\n\n/**\n * Returns a curried function of `f`\n *\n * @example\n * ```ts\n * const add = (a: number, b: number): number => a + b\n *\n * const curried = curry(add)\n * const add10 = curried(10)\n * console.log(add10(5)) // 15\n * console.log(curried(3, 4)) // 7\n * ```\n */\n\nfunction curry<F extends (...args: any[]) => any>(f: F): Curry<F> {\n  const arity = f.length;\n\n  return (function resolver(...args: unknown[]) {\n    const memory = [...args];\n\n    return function (...innerArgs: unknown[]) {\n      const local = [...memory, ...innerArgs];\n      const next = local.length >= arity ? f : resolver;\n\n      return next(...local);\n    };\n  })() as any;\n}\n\nexport default curry;\n"]}