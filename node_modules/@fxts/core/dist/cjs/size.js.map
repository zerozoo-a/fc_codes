{"version":3,"file":"size.js","sourceRoot":"","sources":["../../src/size.ts"],"names":[],"mappings":";;;AAAA,wDAA0B;AAE1B,2CAAgE;AAEhE,SAAS,IAAI,CAA8B,QAAW;IACpD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAA,cAAI,EAAC,cAAM,OAAA,CAAC,EAAE,EAAH,CAAG,EAAE,QAAQ,CAAC,CAAC;IAC1B,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAe,KAAK,CAAmC,QAAW;;;;;;oBAC5D,CAAC,GAAG,CAAC,CAAC;oBACV,qBAAM,IAAA,cAAI,EAAC,cAAM,OAAA,CAAC,EAAE,EAAH,CAAG,EAAE,QAAQ,CAAC,EAAA;;oBAA/B,SAA+B,CAAC;oBAChC,sBAAO,CAAC,EAAC;;;;CACV;AAiBD,SAAS,IAAI,CACX,QAAW;IAEX,IAAI,IAAA,kBAAU,EAAC,QAAQ,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvB;IAED,IAAI,IAAA,uBAAe,EAAC,QAAQ,CAAC,EAAE;QAC7B,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC;KACxB;IACD,MAAM,IAAI,SAAS,CAAC,sDAAsD,CAAC,CAAC;AAC9E,CAAC;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import each from \"./each\";\nimport ReturnValueType from \"./types/ReturnValueType\";\nimport { isAsyncIterable, isIterable } from \"./_internal/utils\";\n\nfunction sync<A extends Iterable<unknown>>(iterable: A) {\n  let a = 0;\n  each(() => a++, iterable);\n  return a;\n}\n\nasync function async<A extends AsyncIterable<unknown>>(iterable: A) {\n  let a = 0;\n  await each(() => a++, iterable);\n  return a;\n}\n\n/**\n * Returns the size of Iterable/AsyncIterable\n *\n * @example\n * ```ts\n * size([1, 2, 3, 4]); // 4\n * size(\"abcde\"); // 5\n *\n * await size(toAsync([1, 2, 3, 4])); // 4\n * ```\n */\nfunction size<A extends Iterable<unknown> | AsyncIterable<unknown>>(\n  iterable: A,\n): ReturnValueType<A, number>;\n\nfunction size<A extends Iterable<unknown> | AsyncIterable<unknown>>(\n  iterable: A,\n) {\n  if (isIterable(iterable)) {\n    return sync(iterable);\n  }\n\n  if (isAsyncIterable(iterable)) {\n    return async(iterable);\n  }\n  throw new TypeError(\"'iterable' must be type of Iterable or AsyncIterable\");\n}\n\nexport default size;\n"]}