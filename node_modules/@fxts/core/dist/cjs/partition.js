"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var utils_1 = require("./_internal/utils");
var groupBy_1 = tslib_1.__importDefault(require("./groupBy"));
var error_1 = require("./_internal/error");
function partition(f, iterable) {
    var _this = this;
    if (iterable === undefined) {
        return function (iterable) {
            return partition(f, iterable);
        };
    }
    if ((0, utils_1.isIterable)(iterable)) {
        var group = (0, groupBy_1.default)(function (a) {
            var key = f(a);
            if ((0, utils_1.isPromise)(key)) {
                throw new error_1.AsyncFunctionException();
            }
            return "".concat(Boolean(key));
        }, iterable);
        return [group["true"] || [], group["false"] || []];
    }
    if ((0, utils_1.isAsyncIterable)(iterable)) {
        var group = (0, groupBy_1.default)(function (a) { return tslib_1.__awaiter(_this, void 0, void 0, function () { var _a, _b; return tslib_1.__generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _a = "".concat;
                    _b = Boolean;
                    return [4 /*yield*/, f(a)];
                case 1: return [2 /*return*/, _a.apply("", [_b.apply(void 0, [_c.sent()])])];
            }
        }); }); }, iterable);
        return group.then(function (group) { return [group["true"] || [], group["false"] || []]; });
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
exports.default = partition;
//# sourceMappingURL=partition.js.map