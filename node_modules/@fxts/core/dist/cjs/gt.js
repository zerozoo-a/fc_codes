"use strict";
/**
 * Returns true if the first argument is greater than the second; false otherwise.
 *
 * @example
 * ```ts
 * gt(5, 1) // expected true
 * gt(1, 5) // expected false
 * gt("a", "b") // expected false
 * gt("b", "a") // expected true
 *
 * filter(gt(5), [1, 2, 4, 5, 8, 9]) // Iterable<[1, 2, 4]>
 * filter(gt(1), [1, 2, 3, 4, 5]) // Iterable<[]>
 * filter(gt("b"), ["a", "b", "c"]) // Iterable<["a"]>
 * filter(gt("a"), ["a", "b"]) // Itreable<[]>
 * ```
 */
Object.defineProperty(exports, "__esModule", { value: true });
function gt(a, b) {
    if (b === undefined) {
        return function (_b) { return gt(a, _b); };
    }
    if (a.constructor !== b.constructor) {
        throw new TypeError("The values you want to compare must be of the same type");
    }
    return a > b;
}
exports.default = gt;
//# sourceMappingURL=gt.js.map