{"version":3,"file":"pipe.js","sourceRoot":"","sources":["../../src/pipe.ts"],"names":[],"mappings":";;;AAAA,0DAA4B;AAC5B,4DAA8B;AA6V9B,SAAS,IAAI,CAAC,CAAM;IAAE,aAAa;SAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;QAAb,4BAAa;;IACjC,OAAO,IAAA,gBAAM,EAAC,eAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/B,CAAC;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import pipe1 from \"./pipe1\";\nimport reduce from \"./reduce\";\nimport Awaited from \"./types/Awaited\";\nimport ReturnPipeType from \"./types/ReturnPipeType\";\n\n/**\n * Performs left to right function composition.\n * The first argument can have any value; the remaining arguments must be unary.\n *\n * @example\n * ```ts\n * pipe(\n *  [1, 2, 3, 4, 5],\n *  map(a => a + 10),\n *  filter(a => a % 2 === 0),\n *  toArray,\n * ); // [12, 14]\n *\n * await pipe(\n *  Promise.resolve([1, 2, 3, 4, 5]),\n *  map(a => a + 10),\n *  filter(a => a % 2 === 0),\n *  toArray,\n * ); // [12, 14]\n *\n * // if you want to use asynchronous callback\n * await pipe(\n *  Promise.resolve([1, 2, 3, 4, 5]),\n *  toAsync,\n *  map(async (a) => a + 10),\n *  filter((a) => a % 2 === 0),\n *  toArray,\n * ); // [12, 14]\n *\n * // with toAsync\n * await pipe(\n *  [Promise.resolve(1), Promise.resolve(2), Promise.resolve(3), Promise.resolve(4), Promise.resolve(5)],\n *  toAsync,\n *  map(a => a + 10),\n *  filter(a => a % 2 === 0),\n *  toArray,\n * ); // [12, 14]\n * ```\n *\n * {@link https://codesandbox.io/s/fxts-toarray-fy84i | Try It}\n *\n * see {@link https://fxts.dev/docs/pipe | pipe}, {@link https://fxts.dev/docs/toAsync | toAsync},\n * {@link https://fxts.dev/docs/map | map}, {@link https://fxts.dev/docs/filter | filter}\n */\n// eslint-disable-next-line\n// @ts-ignore\n// prettier-ignore\nfunction pipe<T1, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => R\n): ReturnPipeType<[T1,R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => R\n): ReturnPipeType<[T1, T2, R]>;\n\nfunction pipe<T1, T2, T3, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => R,\n): ReturnPipeType<[T1, T2, T3, R]>;\n\nfunction pipe<T1, T2, T3, T4, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R]>;\n\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => T16,\n  f16: (a: Awaited<T16>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => T16,\n  f16: (a: Awaited<T16>) => T17,\n  f17: (a: Awaited<T17>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => T16,\n  f16: (a: Awaited<T16>) => T17,\n  f17: (a: Awaited<T17>) => T18,\n  f18: (a: Awaited<T18>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => T16,\n  f16: (a: Awaited<T16>) => T17,\n  f17: (a: Awaited<T17>) => T18,\n  f18: (a: Awaited<T18>) => T19,\n  f19: (a: Awaited<T19>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, R]>;\n\n// prettier-ignore\nfunction pipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, R>(\n  a: T1,\n  f1: (a: Awaited<T1>) => T2,\n  f2: (a: Awaited<T2>) => T3,\n  f3: (a: Awaited<T3>) => T4,\n  f4: (a: Awaited<T4>) => T5,\n  f5: (a: Awaited<T5>) => T6,\n  f6: (a: Awaited<T6>) => T7,\n  f7: (a: Awaited<T7>) => T8,\n  f8: (a: Awaited<T8>) => T9,\n  f9: (a: Awaited<T9>) => T10,\n  f10: (a: Awaited<T10>) => T11,\n  f11: (a: Awaited<T11>) => T12,\n  f12: (a: Awaited<T12>) => T13,\n  f13: (a: Awaited<T13>) => T14,\n  f14: (a: Awaited<T14>) => T15,\n  f15: (a: Awaited<T15>) => T16,\n  f16: (a: Awaited<T16>) => T17,\n  f17: (a: Awaited<T17>) => T18,\n  f18: (a: Awaited<T18>) => T19,\n  f19: (a: Awaited<T19>) => T20,\n  f20: (a: Awaited<T20>) => R,\n): ReturnPipeType<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, R]>;\n\nfunction pipe(a: any, ...fns: any[]) {\n  return reduce(pipe1, a, fns);\n}\n\nexport default pipe;\n"]}