{"version":3,"file":"pipe1.js","sourceRoot":"","sources":["../../src/pipe1.ts"],"names":[],"mappings":";;AACA,2CAA8C;AAW9C;;GAEG;AACH,IAAM,KAAK,GAAU,UAAC,CAAC,EAAE,CAAC;IACxB,OAAO,IAAA,iBAAS,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAQ,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,kBAAe,KAAK,CAAC","sourcesContent":["import Awaited from \"./types/Awaited\";\nimport { isPromise } from \"./_internal/utils\";\n\ntype Pipe1 = <P, F extends (a: P extends Promise<any> ? Awaited<P> : P) => any>(\n  a: P,\n  f: F,\n) => ReturnType<F> extends Promise<any>\n  ? ReturnType<F>\n  : P extends Promise<any>\n  ? Promise<ReturnType<F>>\n  : ReturnType<F>;\n\n/**\n * @internal\n */\nconst pipe1: Pipe1 = (a, f) => {\n  return isPromise(a) ? a.then(f as any) : f(a as any);\n};\n\nexport default pipe1;\n"]}