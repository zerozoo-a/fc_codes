import each from "./each.js";
import { isAsyncIterable, isIterable } from "./_internal/utils.js";
function sync(iterable) {
    let a = 0;
    each(() => a++, iterable);
    return a;
}
async function async(iterable) {
    let a = 0;
    await each(() => a++, iterable);
    return a;
}
function size(iterable) {
    if (isIterable(iterable)) {
        return sync(iterable);
    }
    if (isAsyncIterable(iterable)) {
        return async(iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default size;
//# sourceMappingURL=size.js.map