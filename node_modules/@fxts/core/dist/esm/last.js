import isArray from "./isArray.js";
import isString from "./isString.js";
import reduce from "./reduce.js";
import { isAsyncIterable, isIterable } from "./_internal/utils.js";
function last(iterable) {
    if (isArray(iterable) || isString(iterable)) {
        return iterable[iterable.length - 1];
    }
    if (isIterable(iterable)) {
        return reduce((_, a) => a, iterable);
    }
    else if (isAsyncIterable(iterable)) {
        return reduce((_, a) => a, iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default last;
//# sourceMappingURL=last.js.map