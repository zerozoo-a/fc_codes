import isArray from "./isArray.js";
import pipe1 from "./pipe1.js";
import toArray from "./toArray.js";
import { isAsyncIterable, isIterable } from "./_internal/utils.js";
function sortBy(f, iterable) {
    if (iterable === undefined) {
        return (iterable) => sortBy(f, iterable);
    }
    const _sortBy = (a, b) => {
        const aa = f(a);
        const bb = f(b);
        return aa < bb ? -1 : aa > bb ? 1 : 0;
    };
    if (isArray(iterable)) {
        return iterable.sort(_sortBy);
    }
    if (isIterable(iterable)) {
        return pipe1(toArray(iterable), (arr) => arr.sort(_sortBy));
    }
    if (isAsyncIterable(iterable)) {
        return pipe1(toArray(iterable), (arr) => arr.sort(_sortBy));
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default sortBy;
//# sourceMappingURL=sortBy.js.map