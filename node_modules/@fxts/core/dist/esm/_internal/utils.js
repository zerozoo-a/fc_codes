export function isIterable(a) {
    return typeof (a === null || a === void 0 ? void 0 : a[Symbol.iterator]) === "function";
}
export function isAsyncIterable(a) {
    return typeof (a === null || a === void 0 ? void 0 : a[Symbol.asyncIterator]) === "function";
}
export function isIterator(a) {
    return typeof (a === null || a === void 0 ? void 0 : a.next) === "function";
}
export function toIterator(iterable) {
    if (isIterable(iterable)) {
        return iterable[Symbol.iterator]();
    }
    if (isAsyncIterable(iterable)) {
        return iterable[Symbol.asyncIterator]();
    }
    throw new TypeError("toIterator: iterable must be type of Iterable or AsyncIterable");
}
// eslint-disable-next-line @typescript-eslint/no-empty-function
export const empty = function* () { };
// eslint-disable-next-line @typescript-eslint/no-empty-function
export const asyncEmpty = async function* () { };
export const isNotNullable = (a) => a !== null && a !== undefined;
export const isPromise = (a) => {
    if (a instanceof Promise) {
        return true;
    }
    if (a !== null &&
        typeof a === "object" &&
        typeof a.then === "function" &&
        typeof a.catch === "function") {
        return true;
    }
    return false;
};
//# sourceMappingURL=utils.js.map