{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/_internal/utils.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,UAAU,CACxB,CAAoB;IAEpB,OAAO,OAAO,CAAC,CAAS,aAAT,CAAC,uBAAD,CAAC,CAAW,MAAM,CAAC,QAAQ,CAAC,CAAA,KAAK,UAAU,CAAC;AAC7D,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,CAAoB;IAEpB,OAAO,OAAO,CAAC,CAAS,aAAT,CAAC,uBAAD,CAAC,CAAW,MAAM,CAAC,aAAa,CAAC,CAAA,KAAK,UAAU,CAAC;AAClE,CAAC;AAED,MAAM,UAAU,UAAU,CACxB,CAAoB;IAEpB,OAAO,OAAO,CAAC,CAAS,aAAT,CAAC,uBAAD,CAAC,CAAU,IAAI,CAAA,KAAK,UAAU,CAAC;AAChD,CAAC;AAID,MAAM,UAAU,UAAU,CAAI,QAAwC;IACpE,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;QACxB,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;KACpC;IACD,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;QAC7B,OAAO,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;KACzC;IACD,MAAM,IAAI,SAAS,CACjB,gEAAgE,CACjE,CAAC;AACJ,CAAC;AAED,gEAAgE;AAChE,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAK,CAAC,CAAC;AAErC,gEAAgE;AAChE,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,SAAS,CAAC,MAAK,CAAC,CAAC;AAEhD,MAAM,CAAC,MAAM,aAAa,GAAG,CAAI,CAAI,EAAuB,EAAE,CAC5D,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC;AAEhC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAI,CAAiB,EAAmB,EAAE;IACjE,IAAI,CAAC,YAAY,OAAO,EAAE;QACxB,OAAO,IAAI,CAAC;KACb;IAED,IACE,CAAC,KAAK,IAAI;QACV,OAAO,CAAC,KAAK,QAAQ;QACrB,OAAQ,CAAS,CAAC,IAAI,KAAK,UAAU;QACrC,OAAQ,CAAS,CAAC,KAAK,KAAK,UAAU,EACtC;QACA,OAAO,IAAI,CAAC;KACb;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { Iter } from \"../types/Utils\";\n\nexport function isIterable<T = unknown>(\n  a: Iter<T> | unknown,\n): a is Iterable<T> {\n  return typeof (a as any)?.[Symbol.iterator] === \"function\";\n}\n\nexport function isAsyncIterable<T = unknown>(\n  a: Iter<T> | unknown,\n): a is AsyncIterable<T> {\n  return typeof (a as any)?.[Symbol.asyncIterator] === \"function\";\n}\n\nexport function isIterator<T = unknown>(\n  a: Iter<T> | unknown,\n): a is Iterator<T> | Iterator<Promise<T>> | AsyncIterator<T> {\n  return typeof (a as any)?.next === \"function\";\n}\n\nexport function toIterator<T>(iterable: Iterable<T>): Iterator<T>;\nexport function toIterator<T>(iterable: AsyncIterable<T>): AsyncIterator<T>;\nexport function toIterator<T>(iterable: Iterable<T> | AsyncIterable<T>) {\n  if (isIterable(iterable)) {\n    return iterable[Symbol.iterator]();\n  }\n  if (isAsyncIterable(iterable)) {\n    return iterable[Symbol.asyncIterator]();\n  }\n  throw new TypeError(\n    \"toIterator: iterable must be type of Iterable or AsyncIterable\",\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const empty = function* () {};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const asyncEmpty = async function* () {};\n\nexport const isNotNullable = <T>(a: T): a is NonNullable<T> =>\n  a !== null && a !== undefined;\n\nexport const isPromise = <T>(a: Promise<T> | T): a is Promise<T> => {\n  if (a instanceof Promise) {\n    return true;\n  }\n\n  if (\n    a !== null &&\n    typeof a === \"object\" &&\n    typeof (a as any).then === \"function\" &&\n    typeof (a as any).catch === \"function\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n"]}