{"version":3,"file":"keys.js","sourceRoot":"","sources":["../../../src/Lazy/keys.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AAEH,QAAQ,CAAC,CAAC,IAAI,CAAgC,GAAM;IAClD,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;QACnB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;YAChD,MAAM,CAAC,CAAC;SACT;KACF;AACH,CAAC;AAED,eAAe,IAAI,CAAC","sourcesContent":["/**\n *\n * Returns an iterator of the own enumerable property names of object.\n *\n * @example\n * ```ts\n * [...keys({ a: 1, b: \"2\", c: true })]\n * // [\"a\", \"b\", \"c\"]\n * ```\n */\n\nfunction* keys<T extends Record<string, any>>(obj: T) {\n  for (const k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n      yield k;\n    }\n  }\n}\n\nexport default keys;\n"]}