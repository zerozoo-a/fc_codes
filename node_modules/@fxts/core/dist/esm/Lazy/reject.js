import filter from "./filter.js";
import pipe1 from "../pipe1.js";
import not from "../not.js";
import { isAsyncIterable, isIterable } from "../_internal/utils.js";
function reject(f, iterable) {
    if (iterable === undefined) {
        return (iterable) => {
            return reject(f, iterable);
        };
    }
    if (isIterable(iterable)) {
        return filter((a) => pipe1(f(a), not), iterable);
    }
    if (isAsyncIterable(iterable)) {
        return filter((a) => pipe1(f(a), not), iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default reject;
//# sourceMappingURL=reject.js.map