/**
 *
 * Returns an iterator of the own enumerable string keyed property values of object.
 *
 * @example
 * ```ts
 * [...values({ a: 1, b: "2", c: true })]
 * // [1, "2", true]
 * ```
 */
import { __generator } from "tslib.js";
function values(obj) {
    var _a, _b, _i, k;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [];
                for (_b in obj)
                    _a.push(_b);
                _i = 0;
                _c.label = 1;
            case 1:
                if (!(_i < _a.length)) return [3 /*break*/, 4];
                k = _a[_i];
                if (!Object.prototype.hasOwnProperty.call(obj, k)) return [3 /*break*/, 3];
                return [4 /*yield*/, obj[k]];
            case 2:
                _c.sent();
                _c.label = 3;
            case 3:
                _i++;
                return [3 /*break*/, 1];
            case 4: return [2 /*return*/];
        }
    });
}
export default values;
//# sourceMappingURL=values.js.map