{"version":3,"file":"values.js","sourceRoot":"","sources":["../../../src/Lazy/values.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;;AAEH,SAAU,MAAM,CAAgC,GAAM;;;;;;2BACpC,GAAG;;;;;;;qBACb,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAA5C,wBAA4C;gBAC9C,qBAAM,GAAG,CAAC,CAAC,CAAC,EAAA;;gBAAZ,SAAY,CAAC;;;;;;;;CAGlB;AAED,eAAe,MAAM,CAAC","sourcesContent":["/**\n *\n * Returns an iterator of the own enumerable string keyed property values of object.\n *\n * @example\n * ```ts\n * [...values({ a: 1, b: \"2\", c: true })]\n * // [1, \"2\", true]\n * ```\n */\n\nfunction* values<T extends Record<string, any>>(obj: T) {\n  for (const k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k)) {\n      yield obj[k];\n    }\n  }\n}\n\nexport default values;\n"]}