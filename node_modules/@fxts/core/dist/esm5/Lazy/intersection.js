import identity from "../identity.js";
import { isAsyncIterable, isIterable } from "../_internal/utils.js";
import intersectionBy from "./intersectionBy.js";
function intersection(iterable1, iterable2) {
    if (iterable2 === undefined) {
        return function (iterable2) {
            return intersection(iterable1, iterable2);
        };
    }
    if (isIterable(iterable1) && isIterable(iterable2)) {
        return intersectionBy(identity, iterable1, iterable2);
    }
    if (isIterable(iterable1) && isAsyncIterable(iterable2)) {
        return intersectionBy(identity, iterable1, iterable2);
    }
    if (isAsyncIterable(iterable1) && isIterable(iterable2)) {
        return intersectionBy(identity, iterable1, iterable2);
    }
    if (isAsyncIterable(iterable1) && isAsyncIterable(iterable2)) {
        return intersectionBy(identity, iterable1, iterable2);
    }
    throw new TypeError("'iterable1' and 'iterable2' must be type of Iterable or AsyncIterable");
}
export default intersection;
//# sourceMappingURL=intersection.js.map