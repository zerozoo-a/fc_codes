import { __generator } from "tslib.js";
/**
 *
 * Returns an iterator of the own enumerable string keyed-value pairs.
 *
 * @example
 * ```ts
 *
 * [...entries({ a: 1, b: "2", c: true })]
 * // [["a", 1], ["b", "2"], ["c", true]]
 * ```
 *
 *
 * see {@link https://fxts.dev/docs/fromEntries | fromEntries}
 */
function entries(obj) {
    var _a, _b, _i, k;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [];
                for (_b in obj)
                    _a.push(_b);
                _i = 0;
                _c.label = 1;
            case 1:
                if (!(_i < _a.length)) return [3 /*break*/, 4];
                k = _a[_i];
                if (!Object.prototype.hasOwnProperty.call(obj, k)) return [3 /*break*/, 3];
                return [4 /*yield*/, [k, obj[k]]];
            case 2:
                _c.sent();
                _c.label = 3;
            case 3:
                _i++;
                return [3 /*break*/, 1];
            case 4: return [2 /*return*/];
        }
    });
}
export default entries;
//# sourceMappingURL=entries.js.map