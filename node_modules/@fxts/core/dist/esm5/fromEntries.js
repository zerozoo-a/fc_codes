import { __read } from "tslib.js";
import reduce from "./reduce.js";
import { isAsyncIterable, isIterable } from "./_internal/utils.js";
function fromEntries(iter) {
    var obj = {};
    var reducer = function (obj, _a) {
        var _b = __read(_a, 2), key = _b[0], val = _b[1];
        obj[key] = val;
        return obj;
    };
    if (isAsyncIterable(iter)) {
        return reduce(reducer, obj, iter);
    }
    else if (isIterable(iter)) {
        return reduce(reducer, obj, iter);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default fromEntries;
//# sourceMappingURL=fromEntries.js.map