import { isAsyncIterable, isIterable } from "./_internal/utils.js";
import isArray from "./isArray.js";
import pipe1 from "./pipe1.js";
import toArray from "./toArray.js";
function sort(f, iterable) {
    if (iterable === undefined) {
        return function (iterable) {
            return sort(f, iterable);
        };
    }
    if (isArray(iterable)) {
        return iterable.sort(f);
    }
    if (isIterable(iterable)) {
        return pipe1(toArray(iterable), function (arr) {
            return arr.sort(f);
        });
    }
    if (isAsyncIterable(iterable)) {
        return pipe1(toArray(iterable), function (arr) {
            return arr.sort(f);
        });
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default sort;
//# sourceMappingURL=sort.js.map