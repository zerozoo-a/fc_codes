{"version":3,"file":"delay.js","sourceRoot":"","sources":["../../src/delay.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAa9C,SAAS,KAAK,CAAI,IAAY,EAAE,KAAS;IACvC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACpB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACrB;QAED,UAAU,CAAC;YACT,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACL,CAAC;AAED,eAAe,KAAK,CAAC","sourcesContent":["import { isPromise } from \"./_internal/utils\";\n\n/**\n * Delays the value by given `wait` time\n *\n * @example\n * ```ts\n * await delay(1000);\n * console.log('hello'); // after 1000 milliseconds log hello\n * ```\n */\nfunction delay(wait: number): Promise<void>;\nfunction delay<T>(wait: number, value: T): Promise<T>;\nfunction delay<T>(wait: number, value?: T): Promise<T | undefined> {\n  return new Promise((resolve, reject) => {\n    if (isPromise(value)) {\n      value.catch(reject);\n    }\n\n    setTimeout(() => {\n      resolve(value);\n    }, wait);\n  });\n}\n\nexport default delay;\n"]}