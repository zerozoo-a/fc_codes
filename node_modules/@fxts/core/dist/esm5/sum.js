import add from "./add.js";
import reduce from "./reduce.js";
import { isAsyncIterable, isIterable } from "./_internal/utils.js";
/**
 * Adds all the elements of a Iterable/AsyncIterable.
 *
 * @example
 * ```ts
 * sum([1, 2, 3, 4]); // 10
 * sum(['a', 'b', 'c']); // 'abc'
 * await sum(toAsync([1, 2, 3, 4])); // 10
 * await sum(toAsync(['a', 'b', 'c'])); // 'abc'
 * ```
 */
function sum(iterable) {
    if (isIterable(iterable)) {
        return reduce(add, iterable);
    }
    if (isAsyncIterable(iterable)) {
        return reduce(add, iterable);
    }
    throw new TypeError("'iterable' must be type of Iterable or AsyncIterable");
}
export default sum;
//# sourceMappingURL=sum.js.map