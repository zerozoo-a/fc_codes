import { __read, __spreadArray } from "tslib.js";
/**
 * Returns a curried function of `f`
 *
 * @example
 * ```ts
 * const add = (a: number, b: number): number => a + b
 *
 * const curried = curry(add)
 * const add10 = curried(10)
 * console.log(add10(5)) // 15
 * console.log(curried(3, 4)) // 7
 * ```
 */
function curry(f) {
    var arity = f.length;
    return (function resolver() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var memory = __spreadArray([], __read(args), false);
        return function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var local = __spreadArray(__spreadArray([], __read(memory), false), __read(innerArgs), false);
            var next = local.length >= arity ? f : resolver;
            return next.apply(void 0, __spreadArray([], __read(local), false));
        };
    })();
}
export default curry;
//# sourceMappingURL=curry.js.map