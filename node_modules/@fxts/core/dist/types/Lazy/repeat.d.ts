/**
 * Returns a Iterable/AsyncIterable of size n containing a specified value.
 *
 * @example
 * ```ts
 * const iter = repeat(2, 10);
 * iter.next(); // {value: 10, done:false}
 * iter.next(); // {value: 10, done:false}
 * iter.next(); // {value: undefined, done:true}
 *
 * // with pipe
 * pipe(
 *   repeat(2, 10),
 *   toArray,
 * ); // [10, 10]
 * ```
 */
declare function repeat<T>(n: number, value: T): IterableIterator<T>;
declare function repeat<T>(n: number): (value: T) => IterableIterator<T>;
export default repeat;
//# sourceMappingURL=repeat.d.ts.map