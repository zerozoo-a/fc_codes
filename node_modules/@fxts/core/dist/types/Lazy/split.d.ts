import ReturnIterableIteratorType from "../types/ReturnIterableIteratorType";
/**
 * Splits string by separator.
 *
 * @example
 * ```ts
 * const iter = split(',', '1,2,3,4');
 * iter.next(); // 1
 * iter.next(); // 2
 * iter.next(); // 3
 * iter.next(); // 4
 * iter.next(); // undefined
 *
 * // with pipe
 * pipe(
 *  "👍,😀,🙇‍♂️,🤩,🎉",
 *  split(',')
 * ); // ["👍", "😀", "🙇‍♂️", "🤩", "🎉"]
 * ```
 *
 * see {@link https://fxts.dev/docs/pipe | pipe}
 */
declare function split(sep: string, iterable: Iterable<string>): IterableIterator<string>;
declare function split(sep: string, iterable: AsyncIterable<string>): AsyncIterableIterator<string>;
declare function split<A extends Iterable<string> | AsyncIterable<string>>(sep: string): (iterable: A) => ReturnIterableIteratorType<A, string>;
export default split;
//# sourceMappingURL=split.d.ts.map