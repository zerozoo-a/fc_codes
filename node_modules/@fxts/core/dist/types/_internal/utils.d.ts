import { Iter } from "../types/Utils";
export declare function isIterable<T = unknown>(a: Iter<T> | unknown): a is Iterable<T>;
export declare function isAsyncIterable<T = unknown>(a: Iter<T> | unknown): a is AsyncIterable<T>;
export declare function isIterator<T = unknown>(a: Iter<T> | unknown): a is Iterator<T> | Iterator<Promise<T>> | AsyncIterator<T>;
export declare function toIterator<T>(iterable: Iterable<T>): Iterator<T>;
export declare function toIterator<T>(iterable: AsyncIterable<T>): AsyncIterator<T>;
export declare const empty: () => Generator<never, void, unknown>;
export declare const asyncEmpty: () => AsyncGenerator<never, void, unknown>;
export declare const isNotNullable: <T>(a: T) => a is NonNullable<T>;
export declare const isPromise: <T>(a: T | Promise<T>) => a is Promise<T>;
//# sourceMappingURL=utils.d.ts.map